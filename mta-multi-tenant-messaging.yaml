_schema-version: '2.1'
ID: bookshop-mt-messaging
version: 1.0.0
description: "Multitenant Bookshop CAP Java Project with UI"
parameters:
  enable-parallel-deployments: true
modules:
# --------------------- SERVER MODULE ------------------------
  - name: bookshop-mt-messaging-srv
# ------------------------------------------------------------
    type: java
    path: srv
    parameters:
      memory: 1024M
      disk-quota: 512M
      buildpack: sap_java_buildpack_jakarta
      routes:
        - route: '${default-url}'
        - route: '${default-host}.cert.${default-domain}'
    properties:
      CDS_MULTITENANCY_APPUI_TENANTSEPARATOR: "-"
      JBP_CONFIG_COMPONENTS: "jres: ['com.sap.xs.java.buildpack.jre.SAPMachineJRE']"
      JBP_CONFIG_SAP_MACHINE_JRE: '{ version: 21.+ }'
    build-parameters:
      builder: custom
      commands:
        - mvn clean package -DskipTests=true
      build-result: target/*-exec.jar
    requires:
      - name: bookshop-mt-messaging-kafka
      - name: bookshop-mt-messaging-em
      - name: bookshop-mt-messaging-mq
      - name: bookshop-mt-messaging-eh
      - name: bookshop-mt-messaging-identity
      - name: bookshop-mt-messaging-service-manager
      - name: bookshop-mt-messaging-uaa
      - name: bookshop-mt-messaging-saas-registry
      - name: mtx-api
        properties:
          CDS_MULTITENANCY_SIDECAR_URL: ~{mtx-url}
      - name: app-api
        properties:
          CDS_MULTITENANCY_APPUI_URL: ~{app-url}
      - name: cf-logging
    provides:
      - name: srv-api
        properties:
          srv-url: '${default-url}'
          srv-cert-url: 'https://${default-host}.cert.${default-domain}'
# --------------------- SIDECAR MODULE -----------------------
  - name: bookshop-mt-messaging-sidecar
# ------------------------------------------------------------
    type: nodejs
    path: mtx/sidecar
    parameters:
      memory: 256M
      disk-quota: 1024M
    build-parameters:
      builder: custom
      build-result: gen
      commands:
        - npm run build
      requires:
        - name: bookshop-mt-messaging-srv
    requires:
      - name: bookshop-mt-messaging-service-manager
      - name: bookshop-mt-messaging-uaa
      - name: cf-logging
    provides:
      - name: mtx-api
        properties:
          mtx-url: ${default-url}
# --------------------- APPROUTER MODULE ---------------------
  - name: bookshop-mt-messaging-app
# ------------------------------------------------------------
    type: approuter.nodejs
    path: app
    parameters:
      memory: 256M
      disk-quota: 512M
      keep-existing-routes: true
    properties:
      TENANT_HOST_PATTERN: ^(.*)-${default-uri} # testing only, use custom domain with wildcard for production
    requires:
    - name: srv-api
      group: destinations
      properties:
        name: backend
        url: ~{srv-url}
        forwardAuthToken: true
        strictSSL: true
    - name: bookshop-mt-messaging-uaa
    provides:
      - name: app-api
        properties:
          app-url: '${default-url}'
          app-domain: '${domain}'
# --------------------- RESOURCES ---------------------
resources:
# -----------------------------------------------------
  - name: bookshop-mt-messaging-kafka
    type: org.cloudfoundry.managed-service
    parameters:
      service: kafka
      service-plan: reference
      config:
        advertisement: "3315eb2d-3142-4ed5-91ab-1c3665fef3a8"
  - name: bookshop-mt-messaging-em
    type: org.cloudfoundry.managed-service
    parameters:
      service: enterprise-messaging
      service-plan: default
      path: bookshop-mt-messaging-em.json
  - name: bookshop-mt-messaging-mq
    type: org.cloudfoundry.managed-service
    parameters:
      service: message-queuing
      service-plan: standard
      path: bookshop-mt-messaging-mq.json
  - name: bookshop-mt-messaging-eh
    type: org.cloudfoundry.managed-service
    parameters:
      service: eventmesh-sap2sap-internal
      service-plan: event-mesh-multi-tenant
      path: bookshop-mt-messaging-eh.json
  - name: bookshop-mt-messaging-identity
    type: org.cloudfoundry.managed-service
    parameters:
      service: identity
      service-plan: application
      config:
        multi-tenant: false
        oauth2-configuration:
          redirect-uris:
            - "https://*.${default-domain}/**"
            - "https://*.internal.${default-domain}/node/signin-oidc/*"
        consumed-services:
          - service-instance-name: bookshop-mt-messaging-eh
    requires:
      - name: bookshop-mt-messaging-eh
    processed-after:
      - bookshop-mt-messaging-eh
  - name: bookshop-mt-messaging-uaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security-mt.json
      config: # override xsappname as it needs to be unique
        xsappname: bookshop-mt-messaging-${org}-${space}
        oauth2-configuration:
          redirect-uris:
          - https://*.~{app-api/app-domain}/**
    requires:
      - name: app-api
  - name: bookshop-mt-messaging-service-manager
    type: org.cloudfoundry.managed-service
    parameters:
      service: service-manager
      service-plan: container
  - name: bookshop-mt-messaging-saas-registry
    type: org.cloudfoundry.managed-service
    parameters:
      service: saas-registry
      service-plan: application
      config:
        appName: bookshop-mt-messaging-${org}-${space} # this is the text on the tile
        xsappname: bookshop-mt-messaging-${org}-${space} # this is the value from xsuaa.parameters.config.xsappname
        appUrls:
          getDependencies: ~{srv-api/srv-url}/mt/v1.0/subscriptions/dependencies
          onSubscription: ~{srv-api/srv-url}/mt/v1.0/subscriptions/tenants/{tenantId}
          onSubscriptionAsync: true
          onUnSubscriptionAsync: true
          onUpdateDependenciesAsync: true
          callbackTimeoutMillis: 3600000
# use 'managedService' only if onboarded to UCL happened using Unified Service (ie. MAP)
# BTP integration tests use external systems in UCL at the moment
#        managedService:
#          applicationResourceType:
#            group: bookshop-integration-test.java-runtime.dev.cap.sap
#            type: BookshopIntegrationTestTenant
#            version: v1
        displayName: bookshop-mt-messaging-${org}-${space} # this is used as name in the subscription dashboard
        description: CAP Multi-Tenant Bookshop for Messaging BTP Integration Test.
        category: 'Category'
    requires:
      - name: srv-api
  - name: cf-logging
    type: org.cloudfoundry.managed-service
    parameters:
      service: application-logs
      service-plan: lite
